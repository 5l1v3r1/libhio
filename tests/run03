#! /bin/bash
. ./run_setup

# Read and write N-1 test case with read data value checking.  

case $size in
  t ) blk=1024;              nblk=5;  segsz=$((5    * $cons_ki)); nseg=2;;
  s ) blk=20480;             nblk=8;  segsz=$((160  * $cons_ki)); nseg=10;;
  m ) blk=$((1 * $cons_mi)); nblk=16; segsz=$((16   * $cons_mi)); nseg=16;;
  l ) blk=$((2 * $cons_mi)); nblk=16; segsz=$((32   * $cons_mi)); nseg=32;;
  x ) blk=$((2 * $cons_mi)); nblk=32; segsz=$((64   * $cons_mi)); nseg=64;;
  y ) blk=$((2 * $cons_mi)); nblk=32; segsz=$((64   * $cons_mi)); nseg=128;; 
  z ) blk=$((2 * $cons_mi)); nblk=64; segsz=$((128  * $cons_mi)); nseg=128;; 
  * ) synexit "Error: invalid size $size";;
esac

batch_sub $(( $segsz * $nseg * $ranks ))
msg "blk: $blk  nblk: $nblk  segsz: $segsz  nseg: $nseg  dw_cap: $dw_cap" 

cmdw="
  name run03w v $verbose_lev d $debug_lev mi 0
  /@@ Write N-1 test case @/  
  hi MY_CTX $HIO_TEST_ROOTS
  hdu NT1_DS 98 ALL 
  hdo NT1_DS 98 WRITE,CREAT SHARED
  heo MY_EL WRITE,CREAT,TRUNC 20Mi
  hvp c. .
  lc $nseg
    hsegr 0 $segsz 0
    lc $nblk
      hew 0 $blk 
    le 
  le 
  hec hdc hf mgf mf
"

cmdr="
  name run03r v $verbose_lev d $debug_lev mi 32
  /@@ Read N-1 test case with data checking @/  
  hi MY_CTX $HIO_TEST_ROOTS 
  hdo NT1_DS 98 READ SHARED
  heo MY_EL READ 20Mi
  hvp c. .
  hck on
  lc $nseg
    hsegr 0 $segsz 17
    lc $nblk
      her 0 $blk 
    le 
  le 
  hec hdc hf mgf mf
"

#set -x
clean_roots $HIO_TEST_ROOTS
myrun .libs/xexec.x $cmdw
myrun .libs/xexec.x $cmdr
check_rc
if [[ $max_rc == 0 ]]; then clean_roots $HIO_TEST_ROOTS; fi
